<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="style/MavenView.xsl"?>
<document> 
  <properties>
    <title>Documenti</title>
    <author email="asalicetti@kion.it">Andrea Salicetti</author>
  </properties>
  <body>
		<p>
			Ora implementeremo una versione embrionale della gestione dei documenti, abbozzando una realizzazione al caso d'uso [UC01]. 
 		</p>
	<section name="Scaffolding dell'entità Documento">
		<p>Dato il modello sintetizzato in analisi:</p>
		<div class="img width50" >
			<img src="../../images/documento_UML.png" alt="Documento - Struttura."/>
			<div class="title"><b>[Fig.1]</b> Documento - Struttura.</div>
		</div>
		<p>Possiamo creare tutte le risorse ad esso legate:</p>
		<div class="console">
			rails g scaffold document body:text creator_id:integer revisor_id:integer expire_on:date
		</div>
		<p>Nel comando precedente abbiamo dichiarato le proprietà (e i relativi tipi) associate al modello <b>document</b>.</p>
		<div class="nota">
			Si notino questi tre aspetti:
			<ol>
				<li>Non abbiamo specificato il campo di chiave <code>id</code>: Rails lo crea per noi automaticamente sempre e gli da, convenzionalmente, proprio il nome <code>id</code>.<br/></li>
				<li>La nomenclatura di classi e proprietà è anglosassone. Non è obbligatorio che sia così, ma semplifica nettamente lo sviluppo, in quanto Rails parla inglese e possiede già nativamente delle regole (dette <i>inflections</i>) che gli consentono di stabilire automaticamente che ad un modello denominato <code>document</code> dovrà corrispondere una tabella denominata <code>documents</code>.</li>
			</ol>
		</div>
		<p>Come possiamo evincere anche esaminando l'output del comando, Rails ha creato per noi:</p>
		<ul>
			<li>I file di <b>migrazione</b> del DB per il setup della tabella <code class="db">DOCUMENTS</code>.</li>
			<li>La <b>classe di modello</b> <code class="ruby">Docuement</code>.</li>
			<li>Il <b>controller</b> per la gestione dei record di tipo <i>Document</i>.</li>
			<li>I <b>template</b> delle viste e dei partial relativi.</li>
			<li>La classe <b>helper</b> relativa.</li>
			<li>Un foglio di stile.</li>
			<li>Le risorse necessarie ai <b>test</b> sui documenti:
				<ul>
					<li>Classe per la definizione dei <b>test unitari</b>.</li>
					<li>Descrittore di <b>fixture</b> per popolare la tabella documents con dei record di test.</li>
					<li>Classe per la definizione dei <b>test funzionali</b>.</li>
					<li>Classe per la definizione dei <b>test di acceptance</b>.</li>
				</ul>
			</li>
		</ul>
		<subsection name="Allienamento DB">
			<p>Ogni volta che si interviene sulla struttura di uno o più modelli, occorre ricordarsi di rilanciare le migrations per assicurarsi che le nuove fix introdotte modifichino lo schema su DB in modo tale da riflettere il modello a livello applicativo.</p>
			<p>Facciamolo, dunque, lanciando:</p>
			<div class="console">
				rake db:migrate
			</div>
			<p>
				Ora la tabella documents esiste sul DB.
			</p>
		</subsection>
		<subsection name="Risultato">
			<p>Proviamo a vedere il risultato.</p>
			<p>Lanciamo il server:</p>
			<div class="console">
				rails s
			</div>
			<p>
			e puntiamo all'URL <a href="http://localhost:3000/documents" target="_blank" class="newWindow">http://localhost:3000/documents</a>.</p>
			<div class="img" >
				<img src="../../images/UC01/documenti_I_versione.png" alt="L'applicazione funzionante"/>
			<div class="title"><b>[Fig.1]</b> L'applicazione funzionante.</div>
				</div>
		</subsection>
		<subsection name="Un tocco di stile">
		<p>
			Considerazioni:
		</p>
		<ul>
			<li>Funziona!</li>
			<li>Fa pena...</li>
		</ul>
		<p>Non perdo tempo ora sul layout, voglio prototipare rapidamente, però non posso presentare al cliente una cosa simile.</p>
		<p>Uso un <a href="http://github.com/ryanb/nifty-generators" target="_blank" class="newWindow">generatore apposito</a> per portare provvisoriamente il layout a livelli presentabili; occorrono tre passi</p>
		<ol>
			<li>Dichiarazione di dipendenza:
			<table class="CodeRay"><tr>

  <td class="line_numbers"><pre><a href="#n1" name="n1">1</a>
<a href="#n2" name="n2">2</a>
<a href="#n3" name="n3">3</a>
<a href="#n4" name="n4">4</a>
</pre></td>
  <td class="code"><pre><span title="Ident">group</span> <span title="Symbol" class="sy">:development</span> <span title="Reserved" class="r">do</span>
   <span title="Ident"><span class="highlight">gem</span></span> <span title="String" class="s"><span title="Content" class="highlight">'nifty-generators'</span></span>
   <span title="Ident">...</span>
<span title="Reserved" class="r">end</span>
</pre></td>
</tr></table>

			</li>
			<li>Recupero dipendenze:
				<div class="console">bundle install</div>			
			</li>
			<li>Uso del nuovo generatore:
				<div class="console">rails g nifty:layout</div>			
			</li>
		</ol>
		<p>controllando ora, ci accorgiamo che l'aspetto è decisamente migliorato:</p>
					<div class="img" >
				<img src="../../images/UC01/documenti_II_versione.png" alt="La maschera dei documenti dopo l'aggiunta degli stili"/>
			<div class="title"><b>[Fig.2]</b> La maschera dei documenti dopo l'aggiunta degli stili.</div>
				</div>
		</subsection>
		<subsection name="Aggiungiamo qualche vincolo sul modello">
			<p>Sistemato provvisoriamente lo stile, possiamo giocare un po' con quanto abbiamo prodotto fino ad ora, per renderci conto che l'applicazione è già in grado di compiere tutte le operazioni di CRUD sulla tabella relativa ai documenti.</p>
			<p>Prima di affrontare il discorso <i>tag</i> ed <i>editor</i> e rivedere il modello document per rappresentare opportunamente le relazioni, occupiamoci brevemente dei vincoli sul modello appena creato.</p>
			<p>Facendo qualche prova, notiamo come sia possibile creare un documento <u>anche senza specificare alcun campo</u>.</p>
			<p>Questo ovviamente non va bene, essendo i campi <code>body</code> <code>creator_id</code> ed <code>expire_on</code> <b>obbligatori</b> da specifiche.</p>
			<p>
				Per fortuna, Rails ci aiuta anche in questo.
			</p>
			<p>Si tratta di vincoli sul modello, quindi in Rails, naturalmente, si impongono sulla classe di modello (e basta):</p>
			<div class="filename">app/models/document.rb</div>
			<table class="CodeRay">
			<tbody><tr>
  <td class="line_numbers"><pre><a href="#n1" name="n1">1</a>
<a href="#n2" name="n2">2</a>
<a href="#n3" name="n3">3</a>
</pre></td>
  <td class="code"><pre><span title="Reserved" class="r">class</span> <span title="Class" class="cl">Document</span> <span title="Operator">&lt;</span> <span title="Constant" class="co">ActiveRecord</span><span title="Operator">::</span><span title="Constant" class="co">Base</span>
  <span title="Ident">validates_presence_of</span> <span title="Operator">[</span><span title="Symbol" class="sy">:body</span><span title="Operator">,</span> <span title="Symbol" class="sy">:creator_id</span><span title="Operator">]</span>
<span title="Reserved" class="r">end</span></pre></td>
</tr></tbody></table>
		</subsection>
		<p>Per ora siamo a posto anche con la validazione della form dei documenti (provare per credere).</p>
</section>

	<section name="Scaffolding dell'entità Editor">
		<p>Dato il modello sintetizzato in analisi:</p>
		<div class="img width50" >
			<img src="../../images/editor_UML.png" alt="Editor - Struttura."/>
			<div class="title"><b>[Fig.3]</b> Editor - Struttura.</div>
		</div>
		<p>Creiamo le risorse ad esso legate analogamente a prima:</p>
		<div class="console">
			rails g scaffold editor name:string
		</div>
		<p>Non abbiamo ancora idea di quali proprietà saranno significative per un <i>editor</i>, quindi per gliene diamo solo una che ci pare ragionevole, il nome: saremo sempre in tempo, in un secondo tempo, a rivedere le nostre scelte.</p>
	</section>
	
	<section name="Creazione relazioni fra Documento ed Editor">
		<p>Da precedente analisi:</p>
		<div class="img width50" >
			<img src="../../images/documento_UML.png" alt="Documento / Editor - Relazione."/>
			<div class="title"><b>[Fig.4]</b> Documento / Editor - Relazione.</div>
		</div>
		<p>un documento:</p>
		<ul>
			<li><b>appartiene ad un</b> <i>creator</i> di tipo <i>editor</i>, obbligatorio.</li>
			<li><b>appartiene ad un</b> <i>revisor</i> di tipo <i>editor</i>, facoltativo.</li>
		</ul>
		<p>Imponiamo la relazione sul modello Rails:</p>
		<div class="filename">app/models/document.rb</div>
		<table class="CodeRay"><tbody><tr>
  <td class="line_numbers"><pre><a name="n1" href="#n1">1</a>
<a name="n2" href="#n2">2</a>
<a name="n3" href="#n3">3</a>
<a name="n4" href="#n4">4</a>
<a name="n5" href="#n5">5</a>
</pre></td>
  <td class="code"><pre><span class="r" title="Reserved">class</span> <span class="cl" title="Class">Document</span> <span title="Operator">&lt;</span> <span class="co" title="Constant">ActiveRecord</span><span title="Operator">::</span><span class="co" title="Constant">Base</span>
  <span title="Ident">belongs_to</span> <span class="sy" title="Symbol">:creator</span><span title="Operator">,</span> <span class="sy" title="Symbol">:class_name</span> <span title="Operator">=</span><span title="Operator">&gt;</span> <span class="s" title="String"><span class="dl" title="Delimiter">'</span><span class="k" title="Content">Editor</span><span class="dl" title="Delimiter">'</span></span>
  <span title="Ident">belongs_to</span> <span class="sy" title="Symbol">:revisor</span><span title="Operator">,</span> <span class="sy" title="Symbol">:class_name</span> <span title="Operator">=</span><span title="Operator">&gt;</span> <span class="s" title="String"><span class="dl" title="Delimiter">'</span><span class="k" title="Content">Editor</span><span class="dl" title="Delimiter">'</span></span>
  <span title="Ident">validates_presence_of</span> <span title="Operator">[</span><span class="sy" title="Symbol">:body</span><span title="Operator">,</span> <span class="sy" title="Symbol">:creator_id</span><span title="Operator">]</span>
<span class="r" title="Reserved">end</span></pre></td>
</tr></tbody></table>
	<subsection name="Rivediamo la maschera dei documenti">
		<p>Facciamo in modo che i campi <i>creator</i> e <i>revisor</i> siano mostrati come tendine, anziché come campo di testo libero:</p>
		<div class="filename">app/views/documents/_form.html.erb</div>
		<table class="CodeRay"><tbody><tr>
  <td ondblclick="with (this.firstChild.style) { display = (display == '') ? 'none' : '' }" title="double click to toggle" class="line_numbers"><pre><a name="npre" href="#npre">...</a>
<a name="n1" href="#n1">18</a>
<a name="n2" href="#n2">19</a>
<a name="n3" href="#n3">20</a>
<a name="n4" href="#n4">21</a>
<a name="n5" href="#n5">22</a>
<a name="n6" href="#n6">23</a>
<a name="n7" href="#n7">24</a>
<a name="n8" href="#n8">25</a>
<a name="npost" href="#npost">...</a>
</pre></td>
  <td class="code"><pre ondblclick="with (this.style) { overflow = (overflow == 'auto' || overflow == '') ? 'visible' : 'auto' }"><span>...</span>
  <span class="ta" title="Tag">&lt;div</span> <span class="an" title="Attribute Name">class</span><span title="Operator">=</span><span class="s" title="String"><span class="dl" title="Delimiter">"</span><span class="k" title="Content">field</span><span class="dl" title="Delimiter">"</span></span><span class="ta" title="Tag">&gt;</span>
    <span class="il" title="Inline"><span class="idl" title="Inline Delimiter">&lt;%=</span> <span title="Ident">f</span><span title="Operator">.</span><span title="Ident">label</span> <span class="sy" title="Symbol">:creator_id</span> <span class="idl" title="Inline Delimiter">%&gt;</span></span><span class="ta" title="Tag">&lt;br</span> <span class="ta" title="Tag">/&gt;</span>
    <span class="il" title="Inline"><span class="idl" title="Inline Delimiter">&lt;%=</span> <span title="Ident">f</span><span title="Operator">.</span><span title="Ident">collection_select</span> <span class="sy" title="Symbol">:creator_id</span><span title="Operator">,</span> <span class="co" title="Constant">Editor</span><span title="Operator">.</span><span title="Ident">all</span><span title="Operator">,</span> <span class="sy" title="Symbol">:id</span><span title="Operator">,</span> <span class="sy" title="Symbol">:name</span><span title="Operator">,</span> <span class="sy" title="Symbol">:include_blank</span> <span title="Operator">=</span><span title="Operator">&gt;</span> <span class="pc" title="Predefined constant">true</span> <span class="idl" title="Inline Delimiter">%&gt;</span></span>
  <span class="ta" title="Tag">&lt;/div&gt;</span>
  <span class="ta" title="Tag">&lt;div</span> <span class="an" title="Attribute Name">class</span><span title="Operator">=</span><span class="s" title="String"><span class="dl" title="Delimiter">"</span><span class="k" title="Content">field</span><span class="dl" title="Delimiter">"</span></span><span class="ta" title="Tag">&gt;</span>
    <span class="il" title="Inline"><span class="idl" title="Inline Delimiter">&lt;%=</span> <span title="Ident">f</span><span title="Operator">.</span><span title="Ident">label</span> <span class="sy" title="Symbol">:revisor_id</span> <span class="idl" title="Inline Delimiter">%&gt;</span></span><span class="ta" title="Tag">&lt;br</span> <span class="ta" title="Tag">/&gt;</span>
    <span class="il" title="Inline"><span class="idl" title="Inline Delimiter">&lt;%=</span> <span title="Ident">f</span><span title="Operator">.</span><span title="Ident">collection_select</span> <span class="sy" title="Symbol">:revisor_id</span><span title="Operator">,</span> <span class="co" title="Constant">Editor</span><span title="Operator">.</span><span title="Ident">all</span><span title="Operator">,</span> <span class="sy" title="Symbol">:id</span><span title="Operator">,</span> <span class="sy" title="Symbol">:name</span><span title="Operator">,</span> <span class="sy" title="Symbol">:include_blank</span> <span title="Operator">=</span><span title="Operator">&gt;</span> <span class="pc" title="Predefined constant">true</span> <span class="idl" title="Inline Delimiter">%&gt;</span></span>
  <span class="ta" title="Tag">&lt;/div&gt;</span>
<span>...</span></pre></td>
</tr></tbody></table>
	</subsection>
	</section>
	<navbar home="../impl_00.html" next="impl_02.html"/>
  </body>
</document>
